version: '3.8'

services:
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ./nginx/conf/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf/:/etc/letsencrypt/
    ports:
      - 80:80
      - 443:443
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    env_file:
      - ./.env.prod.domain
    depends_on:
      - web
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  web:
    build: ./src
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./src:/usr/src/app
      - static_volume:/usr/src/app/static
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  redis:
    image: redis:alpine
  celery:
    restart: always
    build: ./src
    command: celery -A config worker -l INFO
    volumes:
      - ./src:/usr/src/app
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
      - web
volumes:
  postgres_data:
  static_volume:
  media_volume:
